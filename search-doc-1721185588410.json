{"searchDocs":[{"title":"June/July Bus Plans","type":0,"sectionRef":"#","url":"/blog/busplans","content":"","keywords":"","version":null},{"title":"Planned buses for June/July 2023:â€‹","type":1,"pageTitle":"June/July Bus Plans","url":"/blog/busplans#planned-buses-for-junejuly-2023","content":" D3RED3FEICRET3RET3FEICFE   ","version":null,"tagName":"h3"},{"title":"???","type":0,"sectionRef":"#","url":"/blog/unknown","content":"","keywords":"","version":null},{"title":"Introduction","type":0,"sectionRef":"#","url":"/docs/buses/","content":"Introduction","keywords":"","version":"Next"},{"title":"Community Pictures","type":0,"sectionRef":"#","url":"/docs/buses/community-pictures","content":"","keywords":"","version":"Next"},{"title":":D","type":1,"pageTitle":"Community Pictures","url":"/docs/buses/community-pictures##","content":"   Image Credit: ProjectDavixd  Image Credit: XIIMysticXII  Image Credit: officemean68  Image Credit: Arcadapt  Image Credit: ProjectDavixd  Image Credit: Eugenee280  Elevator to the top ","version":"Next","tagName":"h2"},{"title":"Hux Chassis Regulations","type":0,"sectionRef":"#","url":"/docs/buses/rules/hux-chassis","content":"","keywords":"","version":"Next"},{"title":"The Cansâ€‹","type":1,"pageTitle":"Hux Chassis Regulations","url":"/docs/buses/rules/hux-chassis#the-cans","content":" Customizing your bus to make it like your spec for the bus is allowed.You are allowed to add any extra doors (Ex. adding a right side emergency door,handicap door, moving handicap door location). This is not recommended for meshed bodys.Changing the size of full size buses are permitted. (Ex. adding 2 more windows in length) This is not allowed for buses sold as shorty.  ","version":"Next","tagName":"h2"},{"title":"The Cannotsâ€‹","type":1,"pageTitle":"Hux Chassis Regulations","url":"/docs/buses/rules/hux-chassis#the-cannots","content":" The Hux Chassis was created by TheLadderson and owned by Huxley Sales, theft any code or assets is blacklistable.Resale of any Huxley Sales property will result in further action.If you wish to use the chassis on a different/personal bus, you must have permission to do so.. You cannot use the chassis on a bus you wish to sell.If you wish to use a bus to create an entirely different bus, you must have permission to do so. (Ex. taking a Thomas FS-65 and making it a Thomas 3800.)Reimporting Huxley Sales assets is bannable and blacklistable.  ","version":"Next","tagName":"h2"},{"title":"Bus Help Policiesâ€‹","type":1,"pageTitle":"Hux Chassis Regulations","url":"/docs/buses/rules/hux-chassis#bus-help-policies","content":" We will not be able to help you if you have done heavy chassis edits.We will not be able to help you if you do not own the bus.  ","version":"Next","tagName":"h2"},{"title":"Upgrading Policiesâ€‹","type":1,"pageTitle":"Hux Chassis Regulations","url":"/docs/buses/rules/hux-chassis#upgrading-policies","content":" Upgrading the bus happens when we release a bus you own in a new chassis.This will cost R$ 300If you do not own the bus you can not upgrade the chassis. ","version":"Next","tagName":"h2"},{"title":"Air Pressure Guide","type":0,"sectionRef":"#","url":"/docs/buses/customization/psi-guide","content":"","keywords":"","version":"Next"},{"title":"Information about Air Pressure (PSI)â€‹","type":1,"pageTitle":"Air Pressure Guide","url":"/docs/buses/customization/psi-guide#information-about-air-pressure-psi","content":" With the Air Pressure feature enabled, the bus has to reach 50 PSI in order to disable the parking brake.If the PSI is below 50, a LOW AIR PRESSURE Pop-Up will appear.    If you are driving, and the PSI drops down to below 40, the parking brake will re-enable and the LOW AIR PRESSURE Pop-Up will re-appear again.  ","version":"Next","tagName":"h2"},{"title":"Ways Pressure is lossâ€‹","type":1,"pageTitle":"Air Pressure Guide","url":"/docs/buses/customization/psi-guide#ways-pressure-is-loss","content":" Pressing the brakes (Pressing S)Using the Parking BrakeUsing a Air-Powered Service Door  ","version":"Next","tagName":"h2"},{"title":"Questionsâ€‹","type":1,"pageTitle":"Air Pressure Guide","url":"/docs/buses/customization/psi-guide#questions","content":" If my door is Electric, how do I disable the Pressure Loss on it?The Bus Settings script has an option in it for Door Pressure Loss, if you want to disable Air Pressure Loss on the service door, set BusSettings.PSI_ServiceDoor to false. What will it be like if I disable it?If you disable it, the bus will allow you to disable the parking brake without needing PSI, and you would be able to drive around. PSI is for realism, its your choice to disable it. ","version":"Next","tagName":"h2"},{"title":"How do I change some of the bus functions?","type":0,"sectionRef":"#","url":"/docs/buses/speccing/functions","content":"How do I change some of the bus functions? Under DriverSeat there is a script named BusSettings double click it; then the script will come up and show all of the available settings.","keywords":"","version":"Next"},{"title":"How do I make a light LED or Incandescent?","type":0,"sectionRef":"#","url":"/docs/buses/speccing/lights","content":"How do I make a light LED or Incandescent? Under Lighting in BusSettings there is a list of lights For Incandescent LightsFor LED Lights To make a light Incandescent change it to &quot;INC&quot;, then go to the lights you want to be Incandescent duplicate it, make it neon, make sure it dose not glitch with the original part, then make the neon part transparency 1. Take the original part and move it out of the light model.","keywords":"","version":"Next"},{"title":"How do I change some of the text configurations?","type":0,"sectionRef":"#","url":"/docs/buses/speccing/text","content":"","keywords":"","version":"Next"},{"title":"How do I change the auto numbers for the License Plates?â€‹","type":1,"pageTitle":"How do I change some of the text configurations?","url":"/docs/buses/speccing/text#how-do-i-change-the-auto-numbers-for-the-license-plates","content":" In BusSettings, look for LicensePlateNN the fist number is the lowest number the bus will pick when randomly picking the number the second one is the highest number.  ","version":"Next","tagName":"h2"},{"title":"How do I change the Company Number aka the number after the dash?â€‹","type":1,"pageTitle":"How do I change some of the text configurations?","url":"/docs/buses/speccing/text#how-do-i-change-the-company-number-aka-the-number-after-the-dash","content":" In BusSettings look for ComNumb change the number that is in the &quot; &quot; to your company number, example &quot;869&quot;. ","version":"Next","tagName":"h2"},{"title":"First ever blog!!","type":0,"sectionRef":"#","url":"/blog/firstblog","content":"","keywords":"","version":null},{"title":"this is the first ever blog!â€‹","type":1,"pageTitle":"First ever blog!!","url":"/blog/firstblog#this-is-the-first-ever-blog","content":" ","version":null,"tagName":"h2"},{"title":"Anyways bye!â€‹","type":1,"pageTitle":"First ever blog!!","url":"/blog/firstblog#anyways-bye","content":"","version":null,"tagName":"h3"},{"title":"Importing Buses into Studio","type":0,"sectionRef":"#","url":"/docs/buses/studio-help/importing-buses","content":"","keywords":"","version":"Next"},{"title":"1st Methodâ€‹","type":1,"pageTitle":"Importing Buses into Studio","url":"/docs/buses/studio-help/importing-buses#1st-method","content":" In a baseplate/your game, right click workspace. A drop down should appear.    Following that, click insert from file.    ","version":"Next","tagName":"h2"},{"title":"2nd Methodâ€‹","type":1,"pageTitle":"Importing Buses into Studio","url":"/docs/buses/studio-help/importing-buses#2nd-method","content":" In a baseplate/your game, keep the studio window open, Open your folder where the .rbxm file is and drag it into your window as shown below    You've imported your .rbxm file! ","version":"Next","tagName":"h2"},{"title":"You've learned how to import & fix sounds on your bus!","type":0,"sectionRef":"#","url":"/docs/buses/studio-help/importing-sounds","content":"If you've purchased a bus and the sounds on the bus do not work, download the sounds in the #ðŸ”Š-bus-engines or #ðŸ”Š-bus-sounds channel. Import the sound to ROBLOX here When your sound is imported to ROBLOX, click the 3 dots and click Copy Asset ID In ROBLOX Studio, find the sound and replace the SoundId with the ID you recently copied For granting other games/experiences access to use these sounds, visit this ROBLOX Forums site You've learned how to import &amp; fix sounds on your bus!","keywords":"","version":"Next"},{"title":"Introduction","type":0,"sectionRef":"#","url":"/docs/spawner/","content":"","keywords":"","version":"Next"},{"title":"Bus spawnerâ€‹","type":1,"pageTitle":"Introduction","url":"/docs/spawner/#bus-spawner","content":" This is a bus spawner that is compatible with GenX &amp; Huxley Buses!  Learn how to setup your bus  Learn all the things you can configure ","version":"Next","tagName":"h2"},{"title":"Teleporting to your Bus when Spawned","type":0,"sectionRef":"#","url":"/docs/spawner/bus-teleport","content":"","keywords":"","version":"Next"},{"title":"Enabling bus teleportsâ€‹","type":1,"pageTitle":"Teleporting to your Bus when Spawned","url":"/docs/spawner/bus-teleport#enabling-bus-teleports","content":" First, make sure that teleportPlayerToBus is set to true in your spawner configuration  ","version":"Next","tagName":"h2"},{"title":"Setting it up in the busâ€‹","type":1,"pageTitle":"Teleporting to your Bus when Spawned","url":"/docs/spawner/bus-teleport#setting-it-up-in-the-bus","content":" Make a basic part, and set the transparency to 0 and anchored.Make sure that part is named SPWNR_TELEPORT, this is vital!Place that part where you want, and make sure it is inside the Body of the bus (should be the same for GenX, GX+, Huxley, and other buses)  Now it is done! You may duplicate this part and make it so you can teleport to all your buses in your fleet! ","version":"Next","tagName":"h2"},{"title":"Gamepass","type":0,"sectionRef":"#","url":"/docs/spawner/category-types/gamepass","content":"Gamepass Example Configuration: { title = &quot;My Category&quot;, // highlight-next-line categoryType = &quot;gamepass&quot;, // highlight-next-line assetId = 12345678, } To set a category to a gamepass - set the categoryType to &quot;gamepass&quot; Then, set your assetId to the gamepass Id of the gamepass note Type gamepass makes it so anyone with a certain gamepass owned can spawn a bus","keywords":"","version":"Next"},{"title":"Open","type":0,"sectionRef":"#","url":"/docs/spawner/category-types/open","content":"Open Example Configuration: { title = &quot;My Category&quot;, // highlight-next-line categoryType = &quot;open&quot;, } To set a category to open - just set the categoryType to &quot;open&quot; and you're done! note Open type makes it so anyone can spawn a bus.","keywords":"","version":"Next"},{"title":"Clothing","type":0,"sectionRef":"#","url":"/docs/spawner/category-types/clothing","content":"Clothing Example Configuration: { title = &quot;My Category&quot;, // highlight-next-line categoryType = &quot;clothing&quot;, // highlight-next-line assetId = 12345678, } To set a category to a clothing item - set the categoryType to &quot;clothing&quot; Then, set your assetId to the asset Id of the clothing article note Type clothing makes it so anyone with a certain clothing item owned can spawn a bus","keywords":"","version":"Next"},{"title":"Advanced Spawning Setup","type":0,"sectionRef":"#","url":"/docs/spawner/advanced-spawning","content":"","keywords":"","version":"Next"},{"title":"What does Advanced Spawning mean?â€‹","type":1,"pageTitle":"Advanced Spawning Setup","url":"/docs/spawner/advanced-spawning#what-does-advanced-spawning-mean","content":" Advanced spawning means that to the player, the buses will spawn as normal; however, this way decreases lag in your game by almost 50%, as most lag comes from the buses. While sitting in server storage, it takes up a lot of the games memory which causes it to lag. This new method of spawning decreases the lag by using one model for all buses that use the same model anyways. So all the buses with the model &quot;2015 Thomas C2&quot; will only use one actual roblox model.  If you are not planning on using the advanced option, you may delete the BusLocations Folder in workspace.  ","version":"Next","tagName":"h2"},{"title":"Setupâ€‹","type":1,"pageTitle":"Advanced Spawning Setup","url":"/docs/spawner/advanced-spawning#setup","content":" First, go to your configuration and set the busModelSpawnType value to &quot;advanced&quot; Then, for this example we will be having our &quot;model&quot; be a &quot;2015 Thomas C2&quot; - For all buses that will just be using the same &quot;2015 Thomas C2&quot;, go and set the ModelName attribute to &quot;2015 Thomas C2&quot;. Now, make sure the BusLocations Folder is ungrouped from the WORKSPACE-UNGROUP folder. Now you can move the arrow whereever you want it to go. The bus will spawn in the very center of that part. And the front of the bus is facing in the direction of the arrow. **Repeat Step 3 For each bus with the Model of 2015 Thomas C2 (or whatever other model) -Remember to rename the workspace part to the corresponding bus number **(The parts will turn transparent automatically once the game is played.)Repeat Steps 2-4 For each Model you haveSpawn your bus now with less lag. In this example we made the workspace part visible for you to see. ","version":"Next","tagName":"h2"},{"title":"Rank","type":0,"sectionRef":"#","url":"/docs/spawner/category-types/rank","content":"Rank Example Configuration: { title = &quot;My Category&quot;, // highlight-next-line categoryType = &quot;rank&quot;, // highlight-next-line minimumRank = 123, } Group Config Make sure your group configuration is enabled with the correct group ID! To set a category to a minimum group rank - set the categoryType to &quot;rank&quot; Then, set your minimumRank to a number between 1 and 255(You can technically set it to 0 but then that defeats the purpose of it being rank locked anyways) note Rank type makes it so anyone with a minimum group rank can spawn a bus","keywords":"","version":"Next"},{"title":"ROBLOX Premium","type":0,"sectionRef":"#","url":"/docs/spawner/category-types/premium","content":"ROBLOX Premium Example Configuration: { title = &quot;My Category&quot;, // highlight-next-line categoryType = &quot;premium&quot;, } To set a category to ROBLOX premium - just set the categoryType to &quot;premium&quot; and you're done! note Premium type makes it so anyone with ROBLOX Premium can spawn a bus","keywords":"","version":"Next"},{"title":"Setup","type":0,"sectionRef":"#","url":"/docs/spawner/setup","content":"","keywords":"","version":"Next"},{"title":"Initial Setupâ€‹","type":1,"pageTitle":"Setup","url":"/docs/spawner/setup#initial-setup","content":" Once you have imported the .RBXM file that you have downloaded, ungroup everything in the folder where it asks you to.  ","version":"Next","tagName":"h2"},{"title":"Adding Busesâ€‹","type":1,"pageTitle":"Setup","url":"/docs/spawner/setup#adding-buses","content":" To add buses to the spawner, move the model into the 'Buses' folder within ServerStorage.  Next, go to ReplicatedStorage -&gt; Buses -&gt; Spawner -&gt; Data and pick a category. You should start with Category1 for now. Copy the BUSNUMBERHEREEXAMPLE Configuration Item and paste it into which category you would like.  The categories are listed in order 1-4.  Once you have pasted the value into the folder, rename the value to the bus name and check the Attributes section of the value in the Properties tab.  You will see different values. You are free to customize these to your liking.  ","version":"Next","tagName":"h2"},{"title":"Attributesâ€‹","type":1,"pageTitle":"Setup","url":"/docs/spawner/setup#attributes","content":" Name\tType\tDescriptionAssignedDriver\tString\tThe ROBLOX User Id of the player who you want assigned to the bus Available\tBoolean\tIf the bus is available. To make out of service check the Servicing attribute, this is used to tell if the bus has been spawned. Editing this value may mess up how the spawner deals with buses! CurrentDriver\tString\tInternal information used by the spawner to know who is driving the bus. Editing this value may mess up how the spawner deals with buses! Description\tString\tDescription of the bus that the player can see when spawning it Image\tString\tThe Image ID that the player can see when spawning it ModelName\tString\tThe Name of Bus Model (ex: 2020 ICCE) that the player can see when spawning it SEE Model Name &amp; It's use Servicing\tBoolean\tUsed by the spawner to know if the bus is in service. Spare\tBoolean\tUsed by the spawner to know if the bus is a spare.  ","version":"Next","tagName":"h2"},{"title":"Model Name & It's useâ€‹","type":1,"pageTitle":"Setup","url":"/docs/spawner/setup#model-name--its-use","content":" The Model Name Attribute is primarily used for showing the user what the model bus is when they spawn it.  In your configuration, you can see there is a value named busModelSpawnType. It is set to &quot;basic&quot; and recommended thst way for new users.  If you want to set it to &quot;advanced&quot;, that is fine and advanced does increase performance by a lot, as each bus model adds on to server lag, which then goes impacts all players.  To see how to use the &quot;advanced&quot; option, see here.  If you are not planning on using the advanced option, you may delete the BusLocations Folder in workspace. ","version":"Next","tagName":"h2"},{"title":"Spawner Typings","type":0,"sectionRef":"#","url":"/docs/spawner/typings","content":"","keywords":"","version":"Next"},{"title":"LUAUâ€‹","type":1,"pageTitle":"Spawner Typings","url":"/docs/spawner/typings#luau","content":" This uses LUAU types. I recommend reading more about it to understand how it works. https://luau-lang.org/typecheck  ","version":"Next","tagName":"h2"},{"title":"Full typings fileâ€‹","type":1,"pageTitle":"Spawner Typings","url":"/docs/spawner/typings#full-typings-file","content":" SpawnerTypings --!strict export type ColorSchemeOption = &quot;dark&quot; | &quot;light&quot; | &quot;blue&quot;; export type CategoryTypeOption = &quot;open&quot; | &quot;rank&quot; | &quot;clothing&quot; | &quot;gamepass&quot; | &quot;premium&quot; --| &quot;mypod&quot; export type BusResult = &quot;NO_WORKSPACE_FOLDER&quot; | &quot;NO_MODELS_FOLDER&quot; | &quot;NO_BUS_FOUND&quot; export type SpawnBusResult = BusResult | &quot;UNABLE_TO_SPAWN&quot; | &quot;ALREADY_HAS_BUS_SPAWNED&quot; | &quot;PERMISSION_DENIED&quot; | &quot;NO_MODEL_GIVEN&quot; | &quot;INVALID_MODEL_GIVEN&quot; | &quot;UNABLE_TO_TELEPORT_BUS&quot; | &quot;UNABLE_TO_TELEPORT_PLAYER&quot; | &quot;SPAWNED&quot; export type DespawnBusResult = BusResult | &quot;UNABLE_TO_DESPAWN&quot; | &quot;DESPAWNED_NOT_DESTROYED&quot; | &quot;DESTROYED_NOT_AVAILABLE&quot; |&quot;DESPAWNED&quot; export type RefuelBusResult = BusResult | &quot;UNABLE_TO_REFUEL&quot; | &quot;REFUELED&quot; export type TurnOffBusResult = BusResult | &quot;UNABLE_TO_TURN_BUS_OFF&quot; | &quot;TURNED_OFF_BUS&quot; export type WebhookReceiever = &quot;discord&quot; | &quot;other&quot; export type ThemeConfig = { title: string; colorScheme: ColorSchemeOption; logoImageId: number; } export type CategoryConfig = { title: string; categoryType: CategoryTypeOption; assetId: number?; minimumRank: number?; } export type CategoryConfigs = { Category1: CategoryConfig; Category2: CategoryConfig?; Category3: CategoryConfig?; Category4: CategoryConfig?; Category5: CategoryConfig?; } export type GroupConfig = { enabled: boolean; groupId: number; minimumSpawnerRank: number; minimumAdminRank: number; allowVipOwnersServerAdmin: boolean; } export type WebhookConfig = { enabled: boolean; receiver: WebhookReceiever; webhookServerUrl: string; webhookClientUrl: string; bodies: {[string]: {}} } export type Config = { theme: ThemeConfig; categories: CategoryConfigs; groupSettings: GroupConfig; webhookSettings: WebhookConfig; busModelsLocation: Folder; depsawnOnPlayerLeave: boolean; teleportPlayerToBus: boolean; busModelSpawnType: &quot;basic&quot; | &quot;advanced&quot;; } export type EventResponse&lt;T&gt; = { status: &quot;OK&quot; | &quot;ERROR&quot;; message: string; data: T; } export type NotificationObject = { plrName: string; plrId: number; body: string; global: boolean?; } export type ColorSchemeConfig = { primary: Color3; secondary: Color3; tertiary: Color3; infoBackgroundColor: Color3; infoContentBackgroundColor: Color3; primaryTextColor: Color3; dashboardButtonColor: Color3; dashboardBoxColor: Color3; dashboardNAColor: Color3; navListTextColor: Color3; welcomeTextColor: Color3; designerTextColor: Color3; spawnerButtonColor: Color3; assignmentTextColor: Color3; notificationStrokeColor: Color3; contentFrameBackgroundId: number; notificationFrameBackgroundId: number; dashboardIconId: number; busIconId: number; } return nil;   ","version":"Next","tagName":"h2"},{"title":"ColorSchemeOptionâ€‹","type":1,"pageTitle":"Spawner Typings","url":"/docs/spawner/typings#colorschemeoption","content":" A List of Options for the Color Scheme  ","version":"Next","tagName":"h2"},{"title":"CategoryTypeOptionâ€‹","type":1,"pageTitle":"Spawner Typings","url":"/docs/spawner/typings#categorytypeoption","content":" A List of Options for the Category Type  ","version":"Next","tagName":"h2"},{"title":"BusResult *â€‹","type":1,"pageTitle":"Spawner Typings","url":"/docs/spawner/typings#busresult-","content":" (Applies for all bus result types) List of Options for the end result depending on the kind of bus event  ","version":"Next","tagName":"h2"},{"title":"ThemeConfigâ€‹","type":1,"pageTitle":"Spawner Typings","url":"/docs/spawner/typings#themeconfig","content":" Contains items for configuring the theme in the spawner configuration  ","version":"Next","tagName":"h2"},{"title":"CategoryConfigâ€‹","type":1,"pageTitle":"Spawner Typings","url":"/docs/spawner/typings#categoryconfig","content":" Contains items for configuring a category in the spawner configuration  ","version":"Next","tagName":"h2"},{"title":"CategoryConfigsâ€‹","type":1,"pageTitle":"Spawner Typings","url":"/docs/spawner/typings#categoryconfigs","content":" Contains list of category config's  ","version":"Next","tagName":"h2"},{"title":"GroupConfigâ€‹","type":1,"pageTitle":"Spawner Typings","url":"/docs/spawner/typings#groupconfig","content":" Contains items for configuring the group in the spawner configuration  ","version":"Next","tagName":"h2"},{"title":"WebhookConfigâ€‹","type":1,"pageTitle":"Spawner Typings","url":"/docs/spawner/typings#webhookconfig","content":" Contains items for configuring a webhook in the spawner configuration  ","version":"Next","tagName":"h2"},{"title":"Configâ€‹","type":1,"pageTitle":"Spawner Typings","url":"/docs/spawner/typings#config","content":" Contains items for configuring the spawner  ","version":"Next","tagName":"h2"},{"title":"EventResponse<T>â€‹","type":1,"pageTitle":"Spawner Typings","url":"/docs/spawner/typings#eventresponset","content":" Contains items for the remote function event response object - with a generic type paramater for the data property.  ","version":"Next","tagName":"h2"},{"title":"NotificationObjectâ€‹","type":1,"pageTitle":"Spawner Typings","url":"/docs/spawner/typings#notificationobject","content":" Contains items for a notification object usually used when interacting with the ROBLOX MessagingService  ","version":"Next","tagName":"h2"},{"title":"ColorSchemeConfigâ€‹","type":1,"pageTitle":"Spawner Typings","url":"/docs/spawner/typings#colorschemeconfig","content":" Contains all items used for initalizing and setting the color scheme. ","version":"Next","tagName":"h2"},{"title":"Configuration","type":0,"sectionRef":"#","url":"/docs/spawner/config","content":"","keywords":"","version":"Next"},{"title":"Example Config Fileâ€‹","type":1,"pageTitle":"Configuration","url":"/docs/spawner/config#example-config-file","content":" We provided you with an example configuration file if needed.  SpawnerConfig --!strict local Typings = require(game:GetService'ReplicatedStorage'.Spawner.SpawnerTypings); --[[ ONLY EDIT THE CONFIG TABLE! Need help? Visit https://huxleysales.github.io/docs/spawner/config or join https://discord.gg/yHH2cynGzD ]] local config: Typings.Config = { theme = { title = &quot;My Spawner&quot;, colorScheme = &quot;dark&quot;, logoImageId = 9428951785, }, categories = { Category1 = { title = &quot;Spawn Bus&quot;, categoryType = &quot;open&quot;, }, }, groupSettings = { enabled = false, groupId = 16419590, minimumSpawnerRank = 0, minimumAdminRank = 250, allowVipOwnersServerAdmin = false }, webhookSettings = { enabled = true, receiver = &quot;discord&quot;, webhookServerUrl = &quot;&quot;, webhookClientUrl = &quot;&quot;, bodies = { onSpawn = { username = &quot;{{spawnerTitle}}&quot;, embeds = { { title = &quot;**Bus Spawned**&quot;, description = &quot;A bus was spawned&quot;, color = tonumber(0x9acd32), author = { name = &quot;{{spawnerTitle}}&quot; }, thumbnail = { url = &quot;{{userAvatarHeadShot}}&quot; }, fields = { { name = &quot;Bus Spawned&quot;, value = &quot;{{busNumber}}&quot;, }, { name = &quot;Bus Spawned by&quot;, value = &quot;[{{displayName}} (@{{username}})](https://roblox.com/users/{{userId}}/profile)&quot; }, { name = &quot;Bus Spawned at&quot;, value = &quot;&lt;t:{{timestamp}}&gt; (&lt;t:{{timestamp}}:R&gt;)&quot; } } } } }, onDespawn = { username = &quot;{{spawnerTitle}}&quot;, embeds = { { title = &quot;**Bus Despawned**&quot;, description = &quot;A bus was despawned&quot;, author = { name = &quot;{{spawnerTitle}}&quot; }, thumbnail = { url = &quot;{{userAvatarHeadShot}}&quot; }, color = tonumber(0x3c78d8), fields = { { name = &quot;Bus Despawned&quot;, value = &quot;{{busNumber}}&quot; }, { name = &quot;Bus Despawned by&quot;, value = &quot;[{{displayName}} (@{{username}})](https://roblox.com/users/{{userId}}/profile)&quot; }, { name = &quot;Bus Despawned at&quot;, value = &quot;&lt;t:{{timestamp}}&gt; (&lt;t:{{timestamp}}:R&gt;)&quot; } } } } }, onMessage = { username = &quot;{{spawnerTitle}}&quot;, embeds = { { title = &quot;**notification Broadcasted**&quot;, description = &quot;Someone sent a notification!&quot;, color = tonumber(0x3c78d8), author = { name = &quot;{{spawnerTitle}}&quot; }, thumbnail = { url = &quot;{{userAvatarHeadShot}}&quot; }, fields = { { name = &quot;notifiction Broadcasted by&quot;, value = &quot;[{{displayName}} (@{{username}})](https://roblox.com/users/{{userId}}/profile)&quot; }, { name = &quot;notification Broadcasted at&quot;, value = &quot;&lt;t:{{timestamp}}&gt; (&lt;t:{{timestamp}}:R&gt;)&quot; }, { name = &quot;notification Type&quot;, value = &quot;{{messageType}}&quot; }, { name = &quot;notification&quot;, value = &quot;{{message}}&quot; } } } } }, onAdmin = { username = &quot;{{spawnerTitle}}&quot;, embeds = { { title = &quot;**Administrative Action**&quot;, description = &quot;Someone executed something on the admin panel&quot;, color = tonumber(0xff4848), author = { name = &quot;{{spawnerTitle}}&quot; }, fields = { { name = &quot;Executed by&quot;, value = &quot;[{{displayName}} (@{{username}})](https://roblox.com/users/{{userId}}/profile)&quot; }, { name = &quot;Executed at&quot;, value = &quot;&lt;t:{{timestamp}}&gt; (&lt;t:{{timestamp}}:R&gt;)&quot; }, { name = &quot;Executed towards&quot;, value = &quot;[{{moderatedDisplayName}} (@{{moderatedUsername}})](https://roblox.com/users/{{moderatedUserId}}/profile)&quot; }, { name = &quot;Action&quot;, value = &quot;{{action}}&quot; }, { name = &quot;Reason&quot;, value = &quot;{{reason}}&quot; } } } } } } }, busModelsLocation = game.ServerStorage.BusModels, depsawnonPlayerLeave = false, teleportPlayerToBus = false, busModelSpawnType = &quot;basic&quot; } return config;   ","version":"Next","tagName":"h2"},{"title":"Configuration Optionsâ€‹","type":1,"pageTitle":"Configuration","url":"/docs/spawner/config#configuration-options","content":" ","version":"Next","tagName":"h2"},{"title":"Basic Configuration Optionsâ€‹","type":1,"pageTitle":"Configuration","url":"/docs/spawner/config#basic-configuration-options","content":" Name\tDescription\tType\tValue Choices\tDefaultValuetheme\tIncludes all the data for your theme such as a title, custom logo image, and color themes! (Blue &amp; Dark Theme are the best ðŸ˜Ž)\tThemeConfig\tView this for value choices categories\tIncludes all the data about the different categories.\tCategoryConfigs\tView this for value choices groupSettings\tIncludes all the data about your group and group settings for the spawner.\tGroupConfig\tView this for value choices webhookSettings\tIncludes all the data about your webhook settings for the spawner.\tWebhookConfig\tView this for value choices busModelsLocation\tIf you want to add more spawner categories (up-to 3 extra).\tPath to Folder\tAny folder in game\tgame.ServerStorage.BusModels depsawnonPlayerLeave\tIf you want a spawned bus to despawn when the associated player leaves the game\tboolean\ttrue/false\tfalse teleportPlayerToBus\tIf you want to teleport a player to their bus when they spawn it\tboolean\ttrue/false\tfalse busModelSpawnType\tThe method of spawning a bus - if using advanced, see Advanced Spawning\tstring\t&quot;basic&quot;/&quot;advanced&quot;\t&quot;basic&quot;  ","version":"Next","tagName":"h3"},{"title":"Theme Configuration Optionsâ€‹","type":1,"pageTitle":"Configuration","url":"/docs/spawner/config#theme-configuration-options","content":" Name\tDescription\tType\tValue Choices\tDefaultValuetitle\tIncludes all the data for your theme such as a title, custom logo image, and color themes! (Blue &amp; Dark Theme are the best ðŸ˜Ž)\tstring\tAny string\t&quot;My Spawner&quot; colorScheme\tIncludes all the data about the different categories.\tstring\t&quot;light&quot;/&quot;dark&quot;/&quot;blue&quot;\t&quot;dark&quot; logoImageId\tIncludes all the data about your group and group settings for the spawner.\tnumber\tAny number\t9428951785  ","version":"Next","tagName":"h3"},{"title":"Category Configuration Optionsâ€‹","type":1,"pageTitle":"Configuration","url":"/docs/spawner/config#category-configuration-options","content":" Categoriesâ€‹  Name\tRequired\tDescription\tTypeCategory1\tyes\tIncludes all the data for Category1\tCategoryConfig Category2\tno\tIncludes all the data for Category2\tCategoryConfig Category3\tno\tIncludes all the data for Category3\tCategoryConfig Category4\tno\tIncludes all the data for Category4\tCategoryConfig Category5\tno\tIncludes all the data for Category4\tCategoryConfig  Categoryâ€‹  Name\tRequired\tDescription\tType\tValue Choices\tDefaultValuetitle\tyes\tTitle of this category\tstring\tAny string\tnil unless first - then &quot;Spawn Bus&quot; categoryType\tyes\tThe Category Type\tnumber\tCategoryTypeOption\tnil unless first - then &quot;open&quot; assetId\tno\tThe asset ID to access this category\tnumber\tAny number\tnil mypodProduct\tno\tThe Product Name for your mypod hub to access this category\tstring\tAny String\tnil minimumRank\tno\tMinimum Group Rank to access this category\tnumber\tAny number\tnil  ","version":"Next","tagName":"h3"},{"title":"Group Configuration Optionsâ€‹","type":1,"pageTitle":"Configuration","url":"/docs/spawner/config#group-configuration-options","content":" Name\tDescription\tType\tValue Choices\tDefaultValueenabled\tIf any of these group features should be used\tboolean\ttrue/false\tfalse groupId\tThe ID of the Roblox Group\tnumber\tAny number\t13299030 minimumSpawnerRank\tMinimum Group Rank to see the spawner\tnumber\tAny number\t1 minimumAdminRank\tMinimum Group Rank to see the admin panel\tnumber\tAny number\t255 allowVipOwnersServerAdmin\tIf VIP Server Owners should see the admin panel\tboolean\ttrue/false\tfalse  ","version":"Next","tagName":"h3"},{"title":"Webhook Configuration Optionsâ€‹","type":1,"pageTitle":"Configuration","url":"/docs/spawner/config#webhook-configuration-options","content":" Name\tDescription\tType\tValue Choices\tDefaultValueenabled\tIf any of these webhook features should be used\tboolean\ttrue/false\tfalse receiver\tWhat system is receiving the webhook (most likely discord)\tnumber &quot;discord&quot; webhookServerUrl\tThe Server/Service URL for the Webhook\tstring\tAny string\t&quot;&quot; webhookServerUrl\tThe Webhook URL\tstring\tAny string\t&quot;&quot; bodies\tThe templates/bodies\t[string]: Any object\t  bodies You should not touch the names of the bodies (onSpawn, onMessage, etc...) but you can touch the contents inside of those names. tip ","version":"Next","tagName":"h3"},{"title":"Webhook Setup","type":0,"sectionRef":"#","url":"/docs/spawner/webhook","content":"","keywords":"","version":"Next"},{"title":"Background infoâ€‹","type":1,"pageTitle":"Webhook Setup","url":"/docs/spawner/webhook#background-info","content":" To maximize usability, uptime, and reliability. It is up to you to self-host the service that sends the webhooks. But don't worry, all the instructions and code is provided!  ","version":"Next","tagName":"h2"},{"title":"Service Setup (Back-End)â€‹","type":1,"pageTitle":"Webhook Setup","url":"/docs/spawner/webhook#service-setup-back-end","content":" First, you need to make an account at https://www.cloudflare.com/ if you don't already have one. Dont worry, this is a trusted website used by millions of websites and services, such as Discord. Eventually, you should reach the dashboard page (see below).    Next, click on the Workers page on the left sidebar (as displayed in the image above). Then, click the Create application button. Don't worry if you don't already have any created.    Make sure you are selecting the Workers tab, and then click Create Worker    Next, you need to name your worker, and make sure you remember the name and full link. Don't worry though, if you forget it, Cloudflare will still have the name!    Then, click Deploy!  You are almost done with this part!    You still need to edit the code, you should be at the page where it gives you the option to edit the code, so click on that. Copy and paste the code below, and replace the current code in the box on the left. You can watch the video demonstration below!      worker.js &quot;use strict&quot;; (() =&gt; { // dist/worker.js (() =&gt; { &quot;use strict&quot;; var __webpack_modules__ = { &quot;./src/handler.ts&quot;: (__unused_webpack_module, exports) =&gt; { Object.defineProperty(exports, &quot;__esModule&quot;, { value: true }); exports.handleRequest = void 0; function getParam(name, url) { name = name.replace(/[[\\]]/g, &quot;\\\\$&amp;&quot;); name = name.replace(/\\//g, &quot;&quot;); const regex = new RegExp(&quot;[?&amp;]&quot; + name + &quot;(=([^&amp;#]*)|&amp;|#|$)&quot;), results = regex.exec(url); if (!results) return null; else if (!results[2]) return &quot;&quot;; else if (results[2]) { results[2] = results[2].replace(/\\//g, &quot;&quot;); } return decodeURIComponent(results[2].replace(/\\+/g, &quot; &quot;)); } async function handleRequest(request) { if (request.url.includes(&quot;/post&quot;) &amp;&amp; request.method == &quot;POST&quot;) { let jsonBody = null; if (request.body) jsonBody = await request.json(); const url = getParam(&quot;webhookurl&quot;, request.url); if (!jsonBody) return new Response(&quot;Missing Body&quot;, { status: 400 }); if (!url) return new Response(&quot;Missing Webhook URL&quot;, { status: 400 }); try { const req = await fetch(url, { method: &quot;post&quot;, body: JSON.stringify(jsonBody), headers: { &quot;Content-Type&quot;: &quot;application/json&quot;, }, }); if (req.status &amp;&amp; req.status == 204) return new Response(null, { status: 204, }); return new Response( `Request Sent! You should see if it sent or not (if status code is not in the 200 range then something went wrong)`, { status: req.status || 200, } ); } catch (error) { return new Response(`Error - Message: ${error}`, { status: 500 }); } } else if ( request.url.includes(&quot;/webhookinfo&quot;) &amp;&amp; request.method == &quot;GET&quot; ) { const url = getParam(&quot;webhookurl&quot;, request.url); if (!url) return new Response(&quot;Missing Webhook URL&quot;, { status: 400 }); try { const req = await fetch(url); return new Response(JSON.stringify(await req.json()), { status: req.status, }); } catch (error) { return new Response(`Error - Message: ${error}`, { status: 500 }); } } else if ( request.url.includes(&quot;/thumb&quot;) &amp;&amp; request.method == &quot;GET&quot; ) { const userId = getParam(&quot;userId&quot;, request.url); if (!userId) return new Response(&quot;Missing User ID&quot;, { status: 400 }); const thumbType = getParam(&quot;type&quot;, request.url); if (!thumbType) return new Response(&quot;Missing Thumbnail Type&quot;, { status: 400 }); try { let req = null; if (thumbType == &quot;0&quot;) { req = await fetch( `https://thumbnails.roblox.com/v1/users/avatar-headshot?userIds=${userId}&amp;size=420x420&amp;format=Png&amp;isCircular=false` ); } else { req = await fetch( `https://thumbnails.roblox.com/v1/users/avatar-bust?userIds=${userId}&amp;size=420x420&amp;format=Png&amp;isCircular=false` ); } return new Response((await req.json()).data[0].imageUrl, { status: req.status, }); } catch (error) { return new Response(`Error - Message: ${error}`, { status: 500 }); } } else { return new Response(&quot;Uh oh!&quot;, { status: 404 }); } } exports.handleRequest = handleRequest; }, }; var __webpack_module_cache__ = {}; function __webpack_require__(moduleId) { var cachedModule = __webpack_module_cache__[moduleId]; if (cachedModule !== void 0) { return cachedModule.exports; } var module = (__webpack_module_cache__[moduleId] = { exports: {}, }); __webpack_modules__[moduleId]( module, module.exports, __webpack_require__ ); return module.exports; } var __webpack_exports__ = {}; (() =&gt; { var exports = __webpack_exports__; Object.defineProperty(exports, &quot;__esModule&quot;, { value: true }); const handler_1 = __webpack_require__(&quot;./src/handler.ts&quot;); addEventListener(&quot;fetch&quot;, (event) =&gt; { event.respondWith(handler_1.handleRequest(event.request)); }); })(); })(); })(); //# sourceMappingURL=worker.js.map   Last, but not least. Click on Save &amp; Deploy, and you are done with this part!    Now, for the next part of this setup, have that full https://workers.dev link handy!  ","version":"Next","tagName":"h2"},{"title":"Roblox Studio Setupâ€‹","type":1,"pageTitle":"Webhook Setup","url":"/docs/spawner/webhook#roblox-studio-setup","content":" ","version":"Next","tagName":"h2"},{"title":"Bot & Discord Webhookâ€‹","type":1,"pageTitle":"Webhook Setup","url":"/docs/spawner/webhook#bot--discord-webhook","content":" First, you need to invite the Bus Spawner Webhook bot (you can ping it in the Huxley Sales server) and invite it. You already should have been added to the system, so now in your own server, do /generate-webhook and specify the channel. It should now give you a Discord webhook link.  NOTICE! If it doesn't let you generate one, make a ticket in the Discord server. If the bot doesn't respond, please notify fisher#8036 on Discord. The webhook you put in the spawner configuration MUST be generated by the Discord bot, or else the spawner will reject it. (It knows :O)  ","version":"Next","tagName":"h3"},{"title":"Spawner Configurationâ€‹","type":1,"pageTitle":"Webhook Setup","url":"/docs/spawner/webhook#spawner-configuration","content":" Look for the webhookSettings options in the spawner configuration. Make the following edits:  Set webhookServerUrl to the full https://workers.dev you have from earlier.Set webhookClientUrl to the Discord webhook generated by the Discord bot.  Now, you are done! ","version":"Next","tagName":"h3"}],"options":{"highlightResult":true,"id":"default"}}